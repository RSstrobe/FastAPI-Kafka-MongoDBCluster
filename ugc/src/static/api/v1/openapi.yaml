openapi: 3.0.0
info:
  title: UGC Events API
  description: API для обработки событий пользовательского интерфейса и плеера.
  version: "1.0.0"
servers:
  - url: /ugc/
tags:
  - name: events
    description: "Event data for analysis users actions"
  - name: feedback
    description: "API for working with users increment"
paths:
  /click_event/{event_type}:
    post:
      tags:
        - events
      summary: "Post clicking event"
      security:
        - cookieAuth: [ ]
      parameters:
        - in: cookie
          name: access-token
          description: "Access token from cookie"
          required: false
          schema:
            type: string
        - name: event_type
          in: path
          description: "Type of click event"
          required: true
          schema:
            type: string
            enum: [ click, close, to_url ]
        - name: url
          in: query
          description: "URL for moving"
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "Successful writing"
        '400':
          description: "Invalid request, missing required parameters"
        '401':
          description: "Unauthorized access, invalid or missing JWT token"
        '403':
          description: "Access denied, insufficient permissions to perform the operation"
        '404':
          description: "Specified resource not found"
        '500':
          description: "Internal server error"

  /player_event/{event_type}:
    post:
      tags:
        - events
      summary: "Post videoplayer event"
      security:
        - cookieAuth: [ ]
      parameters:
        - in: cookie
          name: access-token
          description: "Access token from cookie"
          required: false
          schema:
            type: string
        - name: event_type
          in: path
          description: "Type of event"
          required: true
          schema:
            type: string
            enum: [ stop, start, repeat, settings ]
        - name: movie_url
          in: query
          description: "URL to filmwork"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successful writing"
        '400':
          description: "Invalid request, missing required parameters"
        '401':
          description: "Unauthorized access, invalid or missing JWT token"
        '403':
          description: "Access denied, insufficient permissions to perform the operation"
        '404':
          description: "Specified resource not found"
        '500':
          description: "Internal server error"

  /review/:
    post:
      summary: "Post review from user to film-work"
      tags:
        - feedback
      security:
        - cookieAuth: [ ]
      parameters:
        - in: cookie
          name: access-token
          description: "Access token from cookie"
          required: false
          schema:
            type: string
        - name: text
          in: query
          description: "Text for new review"
          required: false
          schema:
            type: string
        - name: score
          in: query
          description: "Score for film-work"
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: movie_id
          in: query
          description: "ID of film-work"
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: "Successful writing"
        '400':
          description: "Invalid request, missing required parameters"
        '401':
          description: "Unauthorized access, invalid or missing JWT token"
        '403':
          description: "Access denied, insufficient permissions to perform the operation"
        '404':
          description: "Specified resource not found"
        '500':
          description: "Internal server error"





components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access-token
