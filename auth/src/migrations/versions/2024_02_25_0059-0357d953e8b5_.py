"""empty message

Revision ID: 0357d953e8b5
Revises:
Create Date: 2024-02-25 00:59:39.688251

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0357d953e8b5"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "actions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "action_name",
            sa.String(length=50),
            nullable=False,
            comment="Название действия",
        ),
        sa.Column(
            "comment",
            sa.String(length=256),
            nullable=True,
            comment="Комментарий к действию",
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Таблица действий",
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "role_name", sa.String(length=50), nullable=False, comment="Название роли"
        ),
        sa.Column(
            "comment",
            sa.String(length=256),
            nullable=True,
            comment="Комментарий к роли",
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Таблица ролей",
    )
    op.create_table(
        "user_data",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "user_name", sa.String(length=50), nullable=True, comment="Имя пользователя"
        ),
        sa.Column(
            "hashed_password",
            sa.String(),
            nullable=False,
            comment="Хэш пароля пользователя",
        ),
        sa.Column(
            "first_name",
            sa.String(length=50),
            nullable=True,
            comment="Имя пользователя",
        ),
        sa.Column(
            "last_name",
            sa.String(length=50),
            nullable=True,
            comment="Фамилия пользователя",
        ),
        sa.Column(
            "email",
            sa.String(length=256),
            nullable=False,
            comment="Электронная почта пользователя",
        ),
        sa.Column(
            "register_date",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
            comment="Дата регистрации пользователя",
        ),
        sa.Column(
            "phone_number",
            sa.String(length=50),
            nullable=True,
            comment="Номер телефона пользователя",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("user_name"),
        sa.UniqueConstraint("user_name"),
        comment="Таблица данных пользователя",
    )
    op.create_table(
        "auth_history",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "dt_login",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
            comment="Дата авторизации пользователя",
        ),
        sa.Column(
            "dt_logout",
            sa.DateTime(),
            nullable=False,
            comment="Дата logout пользователя",
        ),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="ID пользователя"),
        sa.Column(
            "device_id", sa.String(length=256), nullable=True, comment="ID устройства"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_data.id"],
        ),
        sa.PrimaryKeyConstraint("id", "user_id"),
        postgresql_partition_by="HASH (user_id)",
        comment="Таблица истории авторизации",
    )
    op.execute(
        "CREATE TABLE hash_part_0 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 0);"
    )
    op.execute(
        "CREATE TABLE hash_part_1 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 1);"
    )
    op.execute(
        "CREATE TABLE hash_part_2 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 2);"
    )
    op.execute(
        "CREATE TABLE hash_part_3 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 3);"
    )
    op.execute(
        "CREATE TABLE hash_part_4 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 4);"
    )
    op.execute(
        "CREATE TABLE hash_part_5 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 5);"
    )
    op.execute(
        "CREATE TABLE hash_part_6 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 6);"
    )
    op.execute(
        "CREATE TABLE hash_part_7 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 7);"
    )
    op.execute(
        "CREATE TABLE hash_part_8 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 8);"
    )
    op.execute(
        "CREATE TABLE hash_part_9 PARTITION OF auth_history "
        "FOR VALUES WITH (MODULUS 10, REMAINDER 9);"
    )
    op.create_table(
        "mix_actions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False, comment="ID роли"),
        sa.Column("action_id", sa.UUID(), nullable=False, comment="ID действия"),
        sa.ForeignKeyConstraint(
            ["action_id"],
            ["actions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        comment="Таблица привыязки действий к ролям",
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="ID пользователя"),
        sa.Column("role_id", sa.UUID(), nullable=False, comment="ID роли"),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_data.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
        comment="Таблица пользователь - роль",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("users")
    op.drop_table("mix_actions")
    op.drop_table("auth_history")
    op.drop_table("user_data")
    op.drop_table("roles")
    op.drop_table("actions")
    # ### end Alembic commands ###
